// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: GoogleMapsDirection.proto at 1:1
package me.brosa.myapplication;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GoogleMapsDirection extends Message<GoogleMapsDirection, GoogleMapsDirection.Builder> {
  public static final ProtoAdapter<GoogleMapsDirection> ADAPTER = new ProtoAdapter_GoogleMapsDirection();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_DISTANCE = "";

  public static final String DEFAULT_DIRECTION = "";

  public static final String DEFAULT_ETA = "";

  public static final TurnDirection DEFAULT_TDIRECTION = TurnDirection.Right;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String distance;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String direction;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String eta;

  @WireField(
      tag = 4,
      adapter = ".GoogleMapsDirection$TurnDirection#ADAPTER",
      label = WireField.Label.REQUIRED
  )
  public final TurnDirection tdirection;

  public GoogleMapsDirection(String distance, String direction, String eta, TurnDirection tdirection) {
    this(distance, direction, eta, tdirection, ByteString.EMPTY);
  }

  public GoogleMapsDirection(String distance, String direction, String eta, TurnDirection tdirection, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.distance = distance;
    this.direction = direction;
    this.eta = eta;
    this.tdirection = tdirection;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.distance = distance;
    builder.direction = direction;
    builder.eta = eta;
    builder.tdirection = tdirection;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GoogleMapsDirection)) return false;
    GoogleMapsDirection o = (GoogleMapsDirection) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(distance, o.distance)
        && direction.equals(o.direction)
        && eta.equals(o.eta)
        && tdirection.equals(o.tdirection);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (distance != null ? distance.hashCode() : 0);
      result = result * 37 + direction.hashCode();
      result = result * 37 + eta.hashCode();
      result = result * 37 + tdirection.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (distance != null) builder.append(", distance=").append(distance);
    builder.append(", direction=").append(direction);
    builder.append(", eta=").append(eta);
    builder.append(", tdirection=").append(tdirection);
    return builder.replace(0, 2, "GoogleMapsDirection{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GoogleMapsDirection, Builder> {
    public String distance;

    public String direction;

    public String eta;

    public TurnDirection tdirection;

    public Builder() {
    }

    public Builder distance(String distance) {
      this.distance = distance;
      return this;
    }

    public Builder direction(String direction) {
      this.direction = direction;
      return this;
    }

    public Builder eta(String eta) {
      this.eta = eta;
      return this;
    }

    public Builder tdirection(TurnDirection tdirection) {
      this.tdirection = tdirection;
      return this;
    }

    @Override
    public GoogleMapsDirection build() {
      if (direction == null
          || eta == null
          || tdirection == null) {
        throw Internal.missingRequiredFields(direction, "direction",
            eta, "eta",
            tdirection, "tdirection");
      }
      return new GoogleMapsDirection(distance, direction, eta, tdirection, super.buildUnknownFields());
    }
  }

  public enum TurnDirection implements WireEnum {
    Right(0),

    Left(1),

    Straight(2),

    TurnAround(3);

    public static final ProtoAdapter<TurnDirection> ADAPTER = ProtoAdapter.newEnumAdapter(TurnDirection.class);

    private final int value;

    TurnDirection(int value) {
      this.value = value;
    }

    /**
     * Return the constant for {@code value} or null.
     */
    public static TurnDirection fromValue(int value) {
      switch (value) {
        case 0: return Right;
        case 1: return Left;
        case 2: return Straight;
        case 3: return TurnAround;
        default: return null;
      }
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  private static final class ProtoAdapter_GoogleMapsDirection extends ProtoAdapter<GoogleMapsDirection> {
    ProtoAdapter_GoogleMapsDirection() {
      super(FieldEncoding.LENGTH_DELIMITED, GoogleMapsDirection.class);
    }

    @Override
    public int encodedSize(GoogleMapsDirection value) {
      return (value.distance != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.distance) : 0)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.direction)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.eta)
          + TurnDirection.ADAPTER.encodedSizeWithTag(4, value.tdirection)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GoogleMapsDirection value) throws IOException {
      if (value.distance != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.distance);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.direction);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.eta);
      TurnDirection.ADAPTER.encodeWithTag(writer, 4, value.tdirection);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GoogleMapsDirection decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.distance(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.direction(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.eta(ProtoAdapter.STRING.decode(reader)); break;
          case 4: {
            try {
              builder.tdirection(TurnDirection.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GoogleMapsDirection redact(GoogleMapsDirection value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
